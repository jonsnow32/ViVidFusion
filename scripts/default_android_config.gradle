
android {

    compileSdkVersion versions.compileSdkVersion

    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode versions.appVersionCode
        versionName versions.appVersionName

        buildConfigField "int", "VERSION_CODE", "${versions.appVersionCode}"

        consumerProguardFiles 'proguard-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "dagger.experimentalDaggerErrorMessages": "enabled"
                ]
            }
        }
    }

    testOptions.unitTests.all {
        jvmArgs "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
        androidTest.java.srcDirs += "src/androidTest/kotlin"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjvm-default=all']
        //freeCompilerArgs += "-opt-in=kotlin.Experimental"
    }


    buildTypes {
        release {
            minifyEnabled true
            proguardFiles = [
                    "proguard-rules.pro",
                    getDefaultProguardFile('proguard-android-optimize.txt')
            ]
        }

        debug {
            minifyEnabled false
        }
    }
    signingConfigs {
        release {
            storeFile file("/Volumes/Data/Projects/keystore/startone")
            storePassword "P@sslagi123456?a"
            keyAlias "starone"
            keyPassword "P@sslagi123456?a"
        }
    }
    flavorDimensions "version"

    productFlavors {
        amazon {
            dimension "version"
            ext.useGoogleGcm = false
            ext.customUpdateApk = false
            signingConfig signingConfigs.release
        }

        universal {
            dimension "version"
            ext.useGoogleGcm = true
            ext.customUpdateApk = true
            signingConfig signingConfigs.release
        }

        playstore {
            dimension "version"
            ext.customUpdateApk = false
            ext.useGoogleGcm = true
            signingConfig signingConfigs.release


            externalNativeBuild {
                cmake {
                    cppFlags "-DUSE_PLAY_STORE=1"
                }
            }
        }
    }
}
